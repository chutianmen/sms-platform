<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javablog.smsplatform.webmaster.dao.TMenuMapper">
    <resultMap id="BaseResultMap" type="com.javablog.smsplatform.webmaster.pojo.TMenu">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="perms" jdbcType="VARCHAR" property="perms"/>
        <result column="type" jdbcType="SMALLINT" property="type"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, name, parent_id, url, icon, perms, type, sort
    </sql>
    <select id="selectByExample" parameterType="com.javablog.smsplatform.webmaster.pojo.TMenuExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_menu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_menu
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from t_menu
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.javablog.smsplatform.webmaster.pojo.TMenuExample">
        delete from t_menu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.javablog.smsplatform.webmaster.pojo.TMenu">
        insert into t_menu (id, name, parent_id,
        url, icon, perms, type,
        sort)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER},
        #{url,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, #{perms,jdbcType=VARCHAR}, #{type,jdbcType=SMALLINT},
        #{sort,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.javablog.smsplatform.webmaster.pojo.TMenu">
        insert into t_menu
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="perms != null">
                perms,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="sort != null">
                sort,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="perms != null">
                #{perms,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=SMALLINT},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.javablog.smsplatform.webmaster.pojo.TMenuExample"
            resultType="java.lang.Long">
        select count(*) from t_menu
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_menu
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.parentId != null">
                parent_id = #{record.parentId,jdbcType=INTEGER},
            </if>
            <if test="record.url != null">
                url = #{record.url,jdbcType=VARCHAR},
            </if>
            <if test="record.icon != null">
                icon = #{record.icon,jdbcType=VARCHAR},
            </if>
            <if test="record.perms != null">
                perms = #{record.perms,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=SMALLINT},
            </if>
            <if test="record.sort != null">
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_menu
        set id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        parent_id = #{record.parentId,jdbcType=INTEGER},
        url = #{record.url,jdbcType=VARCHAR},
        icon = #{record.icon,jdbcType=VARCHAR},
        perms = #{record.perms,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=SMALLINT},
        sort = #{record.sort,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.javablog.smsplatform.webmaster.pojo.TMenu">
        update t_menu
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="perms != null">
                perms = #{perms,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=SMALLINT},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.javablog.smsplatform.webmaster.pojo.TMenu">
        update t_menu
        set name = #{name,jdbcType=VARCHAR},
        parent_id = #{parentId,jdbcType=INTEGER},
        url = #{url,jdbcType=VARCHAR},
        icon = #{icon,jdbcType=VARCHAR},
        perms = #{perms,jdbcType=VARCHAR},
        type = #{type,jdbcType=SMALLINT},
        sort = #{sort,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="findMenuByPage" resultMap="BaseResultMap"
            parameterType="com.javablog.smsplatform.webmaster.dto.QueryDTO">
        select m.*,p.name parentName from t_menu m
        left join t_menu p
        on m.parent_id = p.id
        <where>
            <if test="search!=null and search!='' ">
                and m.name like concat('%',#{search},'%')
            </if>
        </where>
        <if test="sort!=null and sort!='' ">
            order by m.${sort} ${order}
        </if>
    </select>

    <!-- 批量删除 -->
    <delete id="deleteMenu" parameterType="java.util.List">
        delete from t_menu
        where
        id in
        <foreach collection="list" open="(" close=")" separator="," item="id">
            #{id}
        </foreach>
    </delete>

    <select id="findMenu" resultMap="BaseResultMap">
        select * from t_menu
        where type!=2
    </select>

    <!-- 根据用户ID查询用户的菜单权限 -->
    <select id="findPermsByUserId" parameterType="java.lang.Integer" resultType="String">
        select DISTINCT m.perms
        from t_menu m
        INNER JOIN t_role_menu rm
        on m.id = rm.menu_id
        INNER JOIN t_user_role ur
        on rm.role_id = ur.role_id
        INNER JOIN t_admin_user u
        on ur.user_id = u.id
        where u.id = #{userId}
    </select>

    <!-- 查询一级目录 -->
    <select id="findDirMenuByUserId" parameterType="java.lang.Integer" resultType="java.util.Map">
        select DISTINCT
        m.id , parent_id parenId, name name, type , icon
        from t_menu m
        INNER JOIN t_role_menu rm
        on m.id = rm.menu_id
        INNER JOIN t_user_role ur
        on rm.role_id = ur.role_id
        where type = 0 and ur.user_id = #{userId}
    </select>

    <!-- 查询一级目录对应的菜单 -->
    <select id="findMenuNotButtonByUserId" parameterType="java.util.Map" resultType="java.util.Map">
        select DISTINCT
        m.id , parent_id parenId, name , type , icon,url
        from t_menu m
        INNER JOIN t_role_menu rm
        on m.id = rm.menu_id
        INNER JOIN t_user_role ur
        on rm.role_id = ur.role_id
        INNER JOIN t_admin_user u
        on ur.user_id = u.id
        where m.type = 1 and
        m.parent_id = #{parentId}
        and u.id=#{userId}
    </select>


</mapper>